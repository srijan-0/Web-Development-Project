{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\Downloads\\\\New folder (2)\\\\Web development\\\\Web-Development-Project\\\\client\\\\src\\\\components\\\\admin\\\\notices\\\\NoticeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useReducer } from \"react\";\n\n// Initial State for the notices\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const noticeState = {\n  notices: [],\n  AddNoticeModal: false,\n  editNoticeModal: {\n    modal: false,\n    nId: null,\n    title: \"\",\n    description: \"\",\n    time: \"\"\n  },\n  loading: false\n};\n\n// Reducer for handling actions related to notices\nexport const noticeReducer = (state, action) => {\n  switch (action.type) {\n    // Fetch all notices and update the state\n    case \"fetchNoticesAndChangeState\":\n      return {\n        ...state,\n        notices: action.payload\n      };\n    // Open/close add notice modal\n    case \"AddNoticeModal\":\n      return {\n        ...state,\n        AddNoticeModal: action.payload\n      };\n    // Open edit notice modal with details\n    case \"editNoticeModalOpen\":\n      return {\n        ...state,\n        editNoticeModal: {\n          modal: true,\n          nId: action.nId,\n          title: action.title,\n          description: action.description,\n          time: action.time\n        }\n      };\n    // Close edit notice modal\n    case \"editNoticeModalClose\":\n      return {\n        ...state,\n        editNoticeModal: {\n          modal: false,\n          nId: null,\n          title: \"\",\n          description: \"\",\n          time: \"\"\n        }\n      };\n    // Set loading state\n    case \"loading\":\n      return {\n        ...state,\n        loading: action.payload\n      };\n    default:\n      return state;\n  }\n};\n\n// Create context for notices\nexport const NoticeContext = /*#__PURE__*/createContext();\n\n// Provider to wrap the components that need access to notices\nexport const NoticeProvider = ({\n  children\n}) => {\n  _s();\n  const [data, dispatch] = useReducer(noticeReducer, noticeState);\n  return /*#__PURE__*/_jsxDEV(NoticeContext.Provider, {\n    value: {\n      data,\n      dispatch\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n};\n_s(NoticeProvider, \"Nh7Tqk0xJFfmrZYlR9mU+uatWTo=\");\n_c = NoticeProvider;\nvar _c;\n$RefreshReg$(_c, \"NoticeProvider\");","map":{"version":3,"names":["React","createContext","useReducer","jsxDEV","_jsxDEV","noticeState","notices","AddNoticeModal","editNoticeModal","modal","nId","title","description","time","loading","noticeReducer","state","action","type","payload","NoticeContext","NoticeProvider","children","_s","data","dispatch","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ACER/Downloads/New folder (2)/Web development/Web-Development-Project/client/src/components/admin/notices/NoticeContext.js"],"sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n\r\n// Initial State for the notices\r\nexport const noticeState = {\r\n    notices: [],\r\n    AddNoticeModal: false,\r\n    editNoticeModal: {\r\n        modal: false,\r\n        nId: null,\r\n        title: \"\",\r\n        description: \"\",\r\n        time: \"\",\r\n    },\r\n    loading: false,\r\n};\r\n\r\n// Reducer for handling actions related to notices\r\nexport const noticeReducer = (state, action) => {\r\n    switch (action.type) {\r\n        // Fetch all notices and update the state\r\n        case \"fetchNoticesAndChangeState\":\r\n            return {\r\n                ...state,\r\n                notices: action.payload,\r\n            };\r\n        // Open/close add notice modal\r\n        case \"AddNoticeModal\":\r\n            return {\r\n                ...state,\r\n                AddNoticeModal: action.payload,\r\n            };\r\n        // Open edit notice modal with details\r\n        case \"editNoticeModalOpen\":\r\n            return {\r\n                ...state,\r\n                editNoticeModal: {\r\n                    modal: true,\r\n                    nId: action.nId,\r\n                    title: action.title,\r\n                    description: action.description,\r\n                    time: action.time,\r\n                },\r\n            };\r\n        // Close edit notice modal\r\n        case \"editNoticeModalClose\":\r\n            return {\r\n                ...state,\r\n                editNoticeModal: {\r\n                    modal: false,\r\n                    nId: null,\r\n                    title: \"\",\r\n                    description: \"\",\r\n                    time: \"\",\r\n                },\r\n            };\r\n        // Set loading state\r\n        case \"loading\":\r\n            return {\r\n                ...state,\r\n                loading: action.payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n// Create context for notices\r\nexport const NoticeContext = createContext();\r\n\r\n// Provider to wrap the components that need access to notices\r\nexport const NoticeProvider = ({ children }) => {\r\n    const [data, dispatch] = useReducer(noticeReducer, noticeState);\r\n\r\n    return (\r\n        <NoticeContext.Provider value={{ data, dispatch }}>\r\n            {children}\r\n        </NoticeContext.Provider>\r\n    );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;;AAExD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,GAAG;EACvBC,OAAO,EAAE,EAAE;EACXC,cAAc,EAAE,KAAK;EACrBC,eAAe,EAAE;IACbC,KAAK,EAAE,KAAK;IACZC,GAAG,EAAE,IAAI;IACTC,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,IAAI,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;AACb,CAAC;;AAED;AACA,OAAO,MAAMC,aAAa,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EAC5C,QAAQA,MAAM,CAACC,IAAI;IACf;IACA,KAAK,4BAA4B;MAC7B,OAAO;QACH,GAAGF,KAAK;QACRV,OAAO,EAAEW,MAAM,CAACE;MACpB,CAAC;IACL;IACA,KAAK,gBAAgB;MACjB,OAAO;QACH,GAAGH,KAAK;QACRT,cAAc,EAAEU,MAAM,CAACE;MAC3B,CAAC;IACL;IACA,KAAK,qBAAqB;MACtB,OAAO;QACH,GAAGH,KAAK;QACRR,eAAe,EAAE;UACbC,KAAK,EAAE,IAAI;UACXC,GAAG,EAAEO,MAAM,CAACP,GAAG;UACfC,KAAK,EAAEM,MAAM,CAACN,KAAK;UACnBC,WAAW,EAAEK,MAAM,CAACL,WAAW;UAC/BC,IAAI,EAAEI,MAAM,CAACJ;QACjB;MACJ,CAAC;IACL;IACA,KAAK,sBAAsB;MACvB,OAAO;QACH,GAAGG,KAAK;QACRR,eAAe,EAAE;UACbC,KAAK,EAAE,KAAK;UACZC,GAAG,EAAE,IAAI;UACTC,KAAK,EAAE,EAAE;UACTC,WAAW,EAAE,EAAE;UACfC,IAAI,EAAE;QACV;MACJ,CAAC;IACL;IACA,KAAK,SAAS;MACV,OAAO;QACH,GAAGG,KAAK;QACRF,OAAO,EAAEG,MAAM,CAACE;MACpB,CAAC;IACL;MACI,OAAOH,KAAK;EACpB;AACJ,CAAC;;AAED;AACA,OAAO,MAAMI,aAAa,gBAAGnB,aAAa,CAAC,CAAC;;AAE5C;AACA,OAAO,MAAMoB,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGvB,UAAU,CAACa,aAAa,EAAEV,WAAW,CAAC;EAE/D,oBACID,OAAA,CAACgB,aAAa,CAACM,QAAQ;IAACC,KAAK,EAAE;MAAEH,IAAI;MAAEC;IAAS,CAAE;IAAAH,QAAA,EAC7CA;EAAQ;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAACR,EAAA,CARWF,cAAc;AAAAW,EAAA,GAAdX,cAAc;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}